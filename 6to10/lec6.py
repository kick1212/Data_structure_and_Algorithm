# 알고리즘의 복잡도(Complexity of Algorithms)
"""
알고리즘의 복잡도란, 문제를 푸는데 있어 얼만큼의 시간적, 공간적 자원을 요구하는 가를 뜻함
1) 시간 복잡도 : 문제의 크기와 이를 해결하는 데 걸리는 시간 사이의 관계
2) 공간 복잡도 : 문제의 크기와 이를 해결하는 데 필요한 메모리 공간 사이의 관계

시간복잡도는 다음과 같이 나눌 수 있다
1) 평균 시간 복잡도 : 임의의 입력 패턴을 가정ㅇ했을 때 소요되는 시간의 평균
2) 최악 시간 복잡도 : 가장 긴 시간을 소요하게 만드는 입력에 따라 소요되는 시간

Big-O Notation
점근 표기법의 하나로, 어떤 함수의 증가 양상을 다른 함수와의 비교로 표현
알고리즘의 복잡도를 표현할 때 쓰임
입력의 크기가 n일때, O(n)은 입력으이 크기에 비례하는 시간이 소요됨을 의미한다.
계수는 그다지 중요하지 않다.

선형시간 알고리즘 - O(n)
ex) n개의 무작위로 나열된 수에서 최댓값을 찾기 위해 선형 탐색 알고리즘을 적용

로그시간 알고리즘 - O(logn)
ex) n개의 크기 순으로 정렬된 수에서 특정 값을 찾기 위해 이진 탐색 알고리즘을 적용

이차시간 알고리즘 - O(n**2)
ex) 삽입정렬, 하나의 원소를 집어넣을 때 n만큼 살피고, 이를 n번 반복하기 때문.

* 보다 낮은 복잡도를 갖는 정렬 알고리즘 - 병합정렬 : O(nlogn)
divide-and-conquer 방법으로 정렬할 수 있다.
즉, 정렬할 데이터를 반씩 나누어 각각을 정렬 : O(logn)
> 정렬된 데이터를 두 묶음씩 한데 합친다. : O(n) > 결국 O(nlogn)만큼 소요된다

"""